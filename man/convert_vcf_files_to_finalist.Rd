% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sarek_vcf.R
\name{convert_vcf_files_to_finalist}
\alias{convert_vcf_files_to_finalist}
\title{Convert VCF files into FinalistDX format and export to Excel}
\usage{
convert_vcf_files_to_finalist(
  vcf_files,
  filter_variants = TRUE,
  vc_tool = c("haplotypecaller", "deepvariant", "strelka"),
  vcf_annotation_tool = c("vep", "common", "snpeff")
)
}
\arguments{
\item{vcf_files}{A character scalar/vector: path(s) to VCF files}

\item{filter_variants}{A logical scalar: if \code{TRUE}, apply \code{\link[=filter_vcf]{filter_vcf()}}}

\item{vc_tool}{A character scalar: variant calling tool used to produce the VCF files.
This influences behaviour \code{\link[=calculate_variant_stats]{calculate_variant_stats()}}.}

\item{vcf_annotation_tool}{A character scalar: which variant annotation tool was used:
\itemize{
\item \code{vep}: Variant Effect Predictor
\item \code{snpeff}: snpEff
\item \code{common}: a generic VCF
}}
}
\value{
A tibble
}
\description{
This function provides the following steps:
\enumerate{
\item Extraction of sample names from VCF files (see \code{\link[=extract_sample_names]{extract_sample_names()}})
\item Conversion of VCF files to tidy tibble (see \code{\link[=read_vcf]{read_vcf()}})
\item Conversion to FinalistDX format (see \code{\link[=convert_vcf_df_to_finalist]{convert_vcf_df_to_finalist()}})
}
}
